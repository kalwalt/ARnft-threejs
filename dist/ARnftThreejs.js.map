{"version":3,"file":"ARnftThreejs.js","sources":["../src/utils/Utils.ts","../src/markermedia/NFTaddTJS.ts"],"sourcesContent":["export class Utils {\n  private static trackedMatrix: any = {\n      // for interpolation\n      delta: [\n          0, 0, 0, 0,\n          0, 0, 0, 0,\n          0, 0, 0, 0,\n          0, 0, 0, 0\n      ],\n      interpolated: [\n          0, 0, 0, 0,\n          0, 0, 0, 0,\n          0, 0, 0, 0,\n          0, 0, 0, 0\n      ]\n  }\n  //private static interpolationFactor: number = 24\n  static interpolate (world: any) {\n    const interpolationFactor = 24\n\n    // interpolate matrix\n    for (let i = 0; i < 16; i++) {\n      this.trackedMatrix.delta[i] = world[i] - this.trackedMatrix.interpolated[i]\n      this.trackedMatrix.interpolated[i] =\n                  this.trackedMatrix.interpolated[i] +\n                  this.trackedMatrix.delta[i] / interpolationFactor\n     }\n     return this.trackedMatrix.interpolated\n   }\n\n  static isMobile () {\n    return /Android|mobile|iPad|iPhone/i.test(navigator.userAgent)\n  }\n\n  static setMatrix (matrix: any, value: any) {\n    const array: any = []\n    for (const key in value) {\n      array[key] = value[key]\n    }\n    if (typeof matrix.elements.set === 'function') {\n      matrix.elements.set(array)\n    } else {\n      matrix.elements = [].slice.call(array)\n    }\n  };\n}\n","import { Object3D } from 'three'\n\nexport class NFTaddTJS {\n    private modelRoot: Object3D;\n    constructor(root: Object3D) {\n        this.modelRoot = root;\n    }\n\n    public addModel(model: Object3D) {\n        document.addEventListener('getNFTData', (ev: any) => {\n            var msg = ev.detail\n            model.position.y = (msg.height / msg.dpi * 2.54 * 10) / 2.0\n            model.position.x = (msg.width / msg.dpi * 2.54 * 10) / 2.0\n        })\n        this.modelRoot.add(model);\n    }\n}\n"],"names":["Utils","[object Object]","world","i","this","trackedMatrix","delta","interpolated","test","navigator","userAgent","matrix","value","array","key","elements","set","slice","call","root","modelRoot","model","document","addEventListener","ev","msg","detail","position","y","height","dpi","x","width","add"],"mappings":"0PAAaA,EAiBXC,mBAAoBC,GAIlB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACtBC,KAAKC,cAAcC,MAAMH,GAAKD,EAAMC,GAAKC,KAAKC,cAAcE,aAAaJ,GACzEC,KAAKC,cAAcE,aAAaJ,GACpBC,KAAKC,cAAcE,aAAaJ,GAChCC,KAAKC,cAAcC,MAAMH,GAPX,GAS3B,OAAOC,KAAKC,cAAcE,aAG7BN,kBACE,MAAO,8BAA8BO,KAAKC,UAAUC,WAGtDT,iBAAkBU,EAAaC,GAC7B,MAAMC,EAAa,GACnB,IAAK,MAAMC,KAAOF,EAChBC,EAAMC,GAAOF,EAAME,GAEc,mBAAxBH,EAAOI,SAASC,IACzBL,EAAOI,SAASC,IAAIH,GAEpBF,EAAOI,SAAW,GAAGE,MAAMC,KAAKL,IAzCrBb,gBAAqB,CAEhCM,MAAO,CACH,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAEbC,aAAc,CACV,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,sBCTfN,YAAYkB,GACRf,KAAKgB,UAAYD,EAGdlB,SAASoB,GACZC,SAASC,iBAAiB,cAAeC,IACrC,IAAIC,EAAMD,EAAGE,OACbL,EAAMM,SAASC,EAAKH,EAAII,OAASJ,EAAIK,IAAM,KAAO,GAAM,EACxDT,EAAMM,SAASI,EAAKN,EAAIO,MAAQP,EAAIK,IAAM,KAAO,GAAM,KAE3D1B,KAAKgB,UAAUa,IAAIZ"}